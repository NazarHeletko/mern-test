{"version":3,"sources":["redux/actions/page-actions.js","components/Header/Tabs/Tabs.js","components/Header/Header.js","components/Users/UsersHeader/UsersHeader.js","redux/actions/users-actions.js","components/Users/UsersContent/SingleUser/SingleUser.js","components/Users/AddUser/UserRoleSelect/UserRoleSelect.js","components/Users/AddUser/AddUser.js","redux/actions/groups-action.js","components/Users/EditUser/EditUserRoleSelect.js","components/Users/EditUser/EditUser.js","components/Notification/Notification.js","components/Users/UsersContent/UsersContent.js","components/Users/Users.js","components/Groups/GoupsHeader/GroupsHeader.js","components/Groups/GroupsContent/SingleGroup/SingleGroup.js","components/Groups/GroupsContent/AddGroup/AddGroup.js","components/Groups/GroupsContent/EditGroup/EditGroup.js","components/Groups/GroupsContent/GroupsContent.js","components/Groups/Groups.js","App.js","redux/reducers/users-reducer.js","redux/reducers/group-reducer.js","redux/reducers/page--reducer.js","redux/reducers/root-reducer.js","redux/store.js","index.js"],"names":["CHANGE_PAGE","changePageAction","payload","type","StyledTabs","styled","props","Tabs","TabIndicatorProps","children","className","display","justifyContent","backgroundColor","width","StyledTab","Tab","disableRipple","theme","textTransform","fontWeight","typography","fontWeightRegular","fontSize","pxToRem","marginRight","spacing","color","CustomizedTabs","React","value","setValue","dispatch","useDispatch","Box","sx","onChange","event","newValue","onClick","label","ScrollTop","window","trigger","useScrollTrigger","target","undefined","disableHysteresis","threshold","Zoom","in","anchor","ownerDocument","document","querySelector","scrollIntoView","behavior","block","role","position","bottom","right","Header","AppBar","Toolbar","id","Fab","size","UsersHeader","tpStyle","margin","gridStyle","borderLeft","paddingLeft","boxShadow","mb","background","Grid","container","item","xs","Typography","variant","GET_USERS","DELETE_USER","UPDATE_USER","CREATE_USER","OPEN_DIALOG_FORM_ADD_USER","IS_USER_EDIT_OPEN","SET_EDITED_USER","SET_INPUT_NAME","DELETE_USER_SUCCESS","CREATE_USER_SUCCESS","CREATE_USER_ERROR","UPDATE_USER_SUCCESS","updateUserSuccessAction","createUserErrorAction","createUserSuccessAction","deleteUserSuccessAction","isUserEditOpenAction","openDialogAddUserAction","getAllUsersThunk","getState","axios","get","then","response","data","catch","err","console","log","deleteUserThunk","uId","delete","deleteUserAction","updateUserThunk","user","patch","createUserThunk","post","SingleUser","name","created","group","border","Button","_id","mr","UserRoleSelect","setNameValue","groupSelected","setGroupSelected","groups","useSelector","state","users","isUserEditOpen","minWidth","mt","FormControl","fullWidth","InputLabel","Select","labelId","map","el","MenuItem","paddingTop","Date","toJSON","slice","replace","startIcon","AddUser","isOpen","userEditDialogOpen","nameValue","Dialog","open","onClose","DialogTitle","DialogContent","TextField","autoFocus","e","autoComplete","GET_GROUPS","DELETE_GROUP","DELETE_GROUP_ERROR","DELETE_GROUP_SUCCESS","OPEN_ADD_GROUP_MODAL","CREATE_NEW_GROUP","ADD_GROUP_SUCCESS","ADD_GROUP_ERROR","OPEN_EDIT_MODAL_GROUP","SET_EDITED_GROUP_DATA","UPDATE_GROUP_DATA","UPDATE_GROUP_DATA_SUCCESS","updateGroupDataSuccessAction","updateGroupThunk","put","setEditedGroupDatalAction","openEditModalAction","addGroupErrorAction","addGroupSuccessAction","addNewGroupThunk","openAddUserModalAction","deleteGroupSuccessAction","deleteGroupErrorAction","deleteGroupThunk","getAllGroupsThunk","EditUserRoleSelect","editedUserGroup","editedUser","EditUser","editedUserID","isEdit","handleChange","Notification","message","setOpen","severity","handleClose","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","Alert","UsersContent","isDeleteSuccess","deleteUserSuccess","isCreateSuccess","createUserSuccess","isCreateUserError","createUserError","updateUserSucess","useEffect","ml","Users","GroupsHeader","SingleGroup","description","AddGroup","isAddGroupModalOpen","openAddGroupModal","useState","nameInput","setNameInput","descriptionInput","setDescriptionInput","multiline","rows","paddingBottom","EditGroup","isEditGroupModalOpen","editedGroupData","editedGroup","newGroup","GroupsContent","isError","deleteGroupError","isSuccess","deleteGroupSuccess","isSuccessedCreate","addNewGroupSuccess","isErrorCreate","addNewGroupError","isupdateSuccess","updateGroupDataSuccess","Groups","App","page","activePage","initialState","rootReducer","combineReducers","action","filter","userToUpdate","userChanges","Object","assign","store","createStore","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9c8cf3cf.chunk.js","sourcesContent":["export const CHANGE_PAGE = 'CHANGE_PAGE'\r\n\r\n\r\nexport const changePageAction = (payload) => {\r\n    return{\r\n        type: CHANGE_PAGE,\r\n        payload\r\n    }\r\n}","import * as React from 'react';\r\nimport { styled } from '@mui/material/styles';\r\nimport Tabs from '@mui/material/Tabs';\r\nimport Tab from '@mui/material/Tab';\r\nimport Box from '@mui/material/Box';\r\nimport {changePageAction} from \"../../../redux/actions/page-actions\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\n\r\n\r\n\r\nconst StyledTabs = styled((props) => (\r\n    <Tabs\r\n        {...props}\r\n        TabIndicatorProps={{ children: <span className=\"MuiTabs-indicatorSpan\" /> }}\r\n    />\r\n))({\r\n    '& .MuiTabs-indicator': {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        backgroundColor: 'transparent',\r\n    },\r\n    '& .MuiTabs-indicatorSpan': {\r\n        width: '80%',\r\n        backgroundColor: '#54acff',\r\n    },\r\n});\r\n\r\nconst StyledTab = styled((props) => <Tab disableRipple {...props} />)(\r\n    ({ theme }) => ({\r\n        textTransform: 'none',\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n        fontSize: theme.typography.pxToRem(15),\r\n        marginRight: theme.spacing(1),\r\n        color: 'rgba(255, 255, 255, 0.7)',\r\n        '&.Mui-selected': {\r\n            color: '#c6efff',\r\n        },\r\n        '&.Mui-focusVisible': {\r\n            backgroundColor: 'rgba(100, 95, 228, 0.32)',\r\n        },\r\n    }),\r\n);\r\n\r\nexport default function CustomizedTabs() {\r\n    const [value, setValue] = React.useState(0);\r\n    const dispatch = useDispatch()\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ width: '100%' }}>\r\n            <StyledTabs\r\n                value={value}\r\n                onChange={handleChange}\r\n                aria-label=\"styled tabs example\"\r\n            >\r\n                <StyledTab onClick={()=>dispatch(changePageAction('users'))} label=\"List of Users\" />\r\n                <StyledTab onClick={()=>dispatch(changePageAction('groups'))} label=\"List of Groups for Users\" />\r\n            </StyledTabs>\r\n        </Box>\r\n    );\r\n}","import * as React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport useScrollTrigger from '@mui/material/useScrollTrigger';\r\nimport Box from '@mui/material/Box';\r\nimport Fab from '@mui/material/Fab';\r\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\r\nimport Zoom from '@mui/material/Zoom';\r\nimport Tabs from \"./Tabs/Tabs\";\r\n\r\nfunction ScrollTop(props) {\r\n    const { children, window } = props;\r\n\r\n    const trigger = useScrollTrigger({\r\n        target: window ? window() : undefined,\r\n        disableHysteresis: true,\r\n        threshold: 100,\r\n    });\r\n\r\n    const handleClick = (event) => {\r\n        const anchor = (event.target.ownerDocument || document).querySelector(\r\n            '#back-to-top-anchor',\r\n        );\r\n\r\n        if (anchor) {\r\n            anchor.scrollIntoView({\r\n                behavior: 'smooth',\r\n                block: 'center',\r\n            });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Zoom in={trigger}>\r\n            <Box\r\n                onClick={handleClick}\r\n                role=\"presentation\"\r\n                sx={{ position: 'fixed', bottom: 16, right: 16 }}\r\n            >\r\n                {children}\r\n            </Box>\r\n        </Zoom>\r\n    );\r\n}\r\n\r\nScrollTop.propTypes = {\r\n    children: PropTypes.element.isRequired,\r\n\r\n    window: PropTypes.func,\r\n};\r\n\r\nexport default function Header(props) {\r\n    return (\r\n        <React.Fragment>\r\n            <AppBar sx={{backgroundColor: '#000000'}}>\r\n                <Toolbar>\r\n                    <Tabs/>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Toolbar id=\"back-to-top-anchor\" />\r\n\r\n            <ScrollTop {...props}>\r\n                <Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\r\n                    <KeyboardArrowUpIcon />\r\n                </Fab>\r\n            </ScrollTop>\r\n        </React.Fragment>\r\n    );\r\n}","import React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nexport const UsersHeader = () => {\r\n    const tpStyle = {\r\n        margin: \"8px 4px\"\r\n\r\n    }\r\n    const gridStyle = {\r\n        borderLeft: \"2px solid #dcdcdc\",\r\n        paddingLeft: 0\r\n    }\r\n    return (\r\n        <Box sx={{boxShadow: \"0px 4px 8px 0px rgba(34, 60, 80, 0.2)\", mb: \"24px\", background: \"#caf0ff\"}}>\r\n            <Grid container spacing={0}>\r\n                <Grid item xs={3} sx={gridStyle}>\r\n                    <Typography variant=\"h6\"  sx={tpStyle}>\r\n                        User name\r\n                    </Typography>\r\n\r\n                </Grid>\r\n                <Grid item xs={3} sx={gridStyle}>\r\n                    <Typography variant=\"h6\" sx={tpStyle}>\r\n                        Created\r\n                    </Typography>\r\n\r\n                </Grid>\r\n                <Grid item xs={3} sx={gridStyle}>\r\n                    <Typography variant=\"h6\" sx={tpStyle}>\r\n                        Group\r\n                    </Typography>\r\n\r\n                </Grid>\r\n                <Grid item xs={3} sx={gridStyle} >\r\n                    <Typography variant=\"h6\" sx={tpStyle}>\r\n                        Actions\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n\r\n    )\r\n}","import axios from \"axios\";\r\n\r\n\r\nexport const GET_USERS = 'users/GET_USERS'\r\nexport const DELETE_USER = 'users/DELETE_USERS'\r\nexport const UPDATE_USER = 'users/UPDATE_USER'\r\nexport const CREATE_USER = 'users/CREATE_USER'\r\nexport const OPEN_DIALOG_FORM_ADD_USER = 'users/OPEN_DIALOG_FORM_ADD_USER'\r\nexport const IS_USER_EDIT_OPEN = 'users/IS_USER_EDIT_OPEN'\r\nexport const SET_EDITED_USER = 'users/SET_EDITED_USER'\r\nexport const SET_INPUT_NAME = 'users/SET_INPUT_NAME'\r\nexport const DELETE_USER_SUCCESS = 'users/DELETE_USER_SUCCESS'\r\nexport const CREATE_USER_SUCCESS = 'users/CREATE_USER_SUCCESS'\r\nexport const CREATE_USER_ERROR = 'users/CREATE_USER_ERROR'\r\nexport const UPDATE_USER_SUCCESS = 'users/UPDATE_USER_SUCCESS'\r\n\r\nexport const updateUserSuccessAction  = (payload) => {\r\n    return {\r\n        type: UPDATE_USER_SUCCESS,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const createUserErrorAction  = (payload) => {\r\n    return {\r\n        type: CREATE_USER_ERROR,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const createUserSuccessAction  = (payload) => {\r\n    return {\r\n        type: CREATE_USER_SUCCESS,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const deleteUserSuccessAction  = (payload) => {\r\n    return {\r\n        type: DELETE_USER_SUCCESS,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const setEditedUserAction  = (payload) => {\r\n    return {\r\n        type: SET_EDITED_USER,\r\n        payload\r\n    }\r\n}\r\n\r\n    export const setInputNameAction  = (payload) => {\r\n    return {\r\n        type: SET_INPUT_NAME,\r\n         payload\r\n    }\r\n}\r\n\r\nexport const isUserEditOpenAction = (payload) => {\r\n    return {\r\n        type: IS_USER_EDIT_OPEN,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const openDialogAddUserAction = (payload) => {\r\n    return {\r\n        type: OPEN_DIALOG_FORM_ADD_USER,\r\n        payload\r\n    }\r\n}\r\n\r\nfunction getAllUsersAction(payload) {\r\n    return {\r\n        type: GET_USERS,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const getAllUsersThunk = () => {\r\n    return (dispatch, getState) => {\r\n        axios.get('http://localhost:5000/api/users').then(response => {\r\n            dispatch(getAllUsersAction(response.data))\r\n        }).catch(err => console.log(err))\r\n    }\r\n}\r\n\r\nfunction deleteUserAction(uId) {\r\n    return {\r\n        type: DELETE_USER,\r\n        payload: uId\r\n    }\r\n}\r\n\r\nexport const deleteUserThunk = ( uId) => {\r\n    return (dispatch, getState) => {\r\n\r\n        axios.delete('http://localhost:5000/api/users', {data: {id: uId}}).then(() => {\r\n            dispatch(deleteUserAction(uId))\r\n            dispatch(deleteUserSuccessAction(true))\r\n        }).catch(err => console.log(err))\r\n    }\r\n}\r\n\r\nfunction updateUserAction (payload) {\r\n    return{\r\n        type: UPDATE_USER,\r\n        user: payload\r\n    }\r\n}\r\n\r\nexport const updateUserThunk = (user) => {\r\n    return (dispatch, getState) => {\r\n        axios.patch('http://localhost:5000/api/users', user).then(()=>{\r\n            dispatch(updateUserAction(user))\r\n            dispatch(updateUserSuccessAction(true))\r\n        }).catch(err => console.log(err))\r\n    }\r\n}\r\n\r\n\r\nfunction createUserAction (payload) {\r\n    return{\r\n        type: CREATE_USER,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const createUserThunk = (user) => {\r\n    return (dispatch, getState) => {\r\n        axios.post('http://localhost:5000/api/users', user).then(()=>{\r\n            dispatch(createUserAction(user))\r\n            dispatch(createUserSuccessAction(true))\r\n        }).catch(err => dispatch(createUserErrorAction(true)))\r\n    }\r\n}","import React from \"react\"\r\nimport Box from \"@mui/material/Box\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Button from \"@mui/material/Button\";\r\nimport {\r\n    deleteUserThunk,\r\n    isUserEditOpenAction,\r\n    openDialogAddUserAction,\r\n    setEditedUserAction\r\n} from \"../../../../redux/actions/users-actions\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\n\r\nexport const SingleUser = ({name, created, group, id}) => {\r\n    const dispatch = useDispatch()\r\n    const tpStyle = {\r\n        margin: \"8px 4px\"\r\n\r\n    }\r\n    const gridStyle = {\r\n\r\n        paddingLeft: 0\r\n    }\r\n    return(\r\n        <Box sx={{border: \"2px solid #dcdcdc\", mb: \"4px\"}}>\r\n            <Grid container spacing={0}>\r\n                <Grid item xs={3} sx={gridStyle}>\r\n                    <Typography variant=\"subtitle1\"  sx={tpStyle}>\r\n                        {name}\r\n                    </Typography>\r\n\r\n                </Grid>\r\n                <Grid item xs={3} sx={gridStyle}>\r\n                    <Typography variant=\"subtitle1\" sx={tpStyle}>\r\n                        {created}\r\n                    </Typography>\r\n\r\n                </Grid>\r\n                <Grid item xs={3} sx={gridStyle}>\r\n                    <Typography variant=\"subtitle1\" sx={tpStyle}>\r\n                        {group}\r\n                    </Typography>\r\n\r\n                </Grid>\r\n                <Grid item xs={3} sx={gridStyle}    >\r\n                    <Typography variant=\"subtitle1\" sx={tpStyle}>\r\n                        <Button onClick={()=>{\r\n                            dispatch(setEditedUserAction({_id: id, name, group}));\r\n                            dispatch(isUserEditOpenAction(true))\r\n                        }} size=\"small\" variant=\"outlined\" sx={{mr: \"4px\"}}>edit user</Button>\r\n                        <Button onClick={()=>dispatch(deleteUserThunk(id))} size=\"small\" variant=\"outlined\" color=\"error\">delete</Button>\r\n                    </Typography>\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </Box>\r\n    )\r\n}","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Button from \"@mui/material/Button\";\r\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\r\nimport {\r\n    createUserSuccessAction,\r\n    createUserThunk,\r\n    openDialogAddUserAction,\r\n    updateUserThunk\r\n} from \"../../../../redux/actions/users-actions\";\r\n\r\n\r\nexport default function UserRoleSelect({name, setNameValue}) {\r\n    const [groupSelected, setGroupSelected] = React.useState('Noname')\r\n    const groups = useSelector(state => state.groups.groups)\r\n    const isEdit = useSelector(state => state.users.isUserEditOpen)\r\n    const dispatch = useDispatch()\r\n\r\n    const handleChange = (event) => {\r\n        setGroupSelected(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <Box sx={{minWidth: 120, mt: \"6px\"}}>\r\n            <FormControl fullWidth>\r\n                <InputLabel id=\"demo-simple-select-label\">Group</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={groupSelected}\r\n                    label=\"Group\"\r\n                    onChange={handleChange}\r\n                >\r\n                    {groups.map(el => <MenuItem key={el._id} value={el.name}>{el.name}</MenuItem>)}\r\n\r\n                </Select>\r\n            </FormControl>\r\n            <Box sx={{display: \"flex\", justifyContent: \"center\", paddingTop: \"22px\"}}>\r\n                <Button onClick={() => {\r\n\r\n                        dispatch(createUserThunk({\r\n                            name,\r\n                            group: groupSelected,\r\n                            created: new Date().toJSON().slice(0, 10).replace(/-/g, '/')\r\n                        }));\r\n                        dispatch(openDialogAddUserAction(false));\r\n                        setNameValue('');\r\n                    }} color=\"success\"\r\n                                   variant=\"contained\"\r\n                                   startIcon={<AddCircleOutlineIcon sx={{color: \"#fff\"}} fontSize=\"small\"/>}>\r\n                        save\r\n                    </Button>\r\n\r\n            </Box>\r\n        </Box>\r\n    );\r\n}","import * as React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport {isUserEditOpenAction, openDialogAddUserAction, setEditedUserAction} from \"../../../redux/actions/users-actions\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport UserRoleSelect from \"./UserRoleSelect/UserRoleSelect\";\r\n\r\n\r\nexport default function AddUser() {\r\n    const isEdit = useSelector(state => state.users.isUserEditOpen)\r\n    const isOpen = useSelector(state => state.users.userEditDialogOpen)\r\n    const dispatch = useDispatch()\r\n    const [nameValue, setNameValue] = React.useState(  '');\r\n\r\n\r\n    const handleChange = (event) => {\r\n        setNameValue(event.target.value)\r\n    };\r\n\r\n    return (\r\n\r\n            <Dialog open={isOpen} onClose={() => {\r\n                dispatch(openDialogAddUserAction(false));\r\n                setNameValue('')\r\n            }}>\r\n                <DialogTitle>To add a new user fill out the form</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Name\"\r\n                        fullWidth\r\n                        onChange={(e)=> handleChange(e)}\r\n                        value={nameValue}\r\n                        autoComplete='off'\r\n                    />\r\n                    <UserRoleSelect name={nameValue}  setNameValue={setNameValue}/>\r\n                </DialogContent >\r\n            </Dialog>\r\n\r\n    );\r\n}","import axios from \"axios\";\r\n\r\n\r\nexport const GET_GROUPS = 'groups/GET_GROUPS'\r\nexport const DELETE_GROUP = 'groups/DELETE_GROUP'\r\nexport const DELETE_GROUP_ERROR = 'groups/DELETE_GROUP_ERROR'\r\nexport const DELETE_GROUP_SUCCESS = 'groups/DELETE_GROUP_SUCCESS'\r\nexport const OPEN_ADD_GROUP_MODAL = 'groups/OPEN_ADD_GROUP_MODAL'\r\nexport const CREATE_NEW_GROUP = 'groups/CREATE_NEW_GROUP'\r\nexport const ADD_GROUP_SUCCESS = 'groups/ADD_GROUP_SUCCESS'\r\nexport const ADD_GROUP_ERROR = 'groups/ADD_GROUP_ERROR'\r\nexport const OPEN_EDIT_MODAL_GROUP = 'groups/OPEN_EDIT_MODAL_GROUP'\r\nexport const SET_EDITED_GROUP_DATA = 'groups/SET_EDITED_GROUP_DATA'\r\nexport const UPDATE_GROUP_DATA = 'groups/UPDATE_GROUP_DATA'\r\nexport const UPDATE_GROUP_DATA_SUCCESS = 'groups/UPDATE_GROUP_DATA_SUCCESS'\r\n\r\nexport function updateGroupDataSuccessAction(payload) {\r\n    return {\r\n        type: UPDATE_GROUP_DATA_SUCCESS,\r\n        payload\r\n    }\r\n}\r\n\r\nfunction updateGroupDataAction(payload) {\r\n    return {\r\n        type: UPDATE_GROUP_DATA,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const updateGroupThunk = (group) => {\r\n    return (dispatch, getState) => {\r\n        axios.put('http://localhost:5000/api/groups', group).then(response => {\r\n            dispatch(updateGroupDataAction(group))\r\n            dispatch(updateGroupDataSuccessAction(true))\r\n        }).catch(err => console.log(err))\r\n    }\r\n}\r\n\r\nexport function setEditedGroupDatalAction(payload) {\r\n    return {\r\n        type: SET_EDITED_GROUP_DATA,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function openEditModalAction(payload) {\r\n    return {\r\n        type: OPEN_EDIT_MODAL_GROUP,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function addGroupErrorAction(payload) {\r\n    return {\r\n        type: ADD_GROUP_ERROR,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function addGroupSuccessAction(payload) {\r\n    return {\r\n        type: ADD_GROUP_SUCCESS,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function addNewGroupAction(payload) {\r\n    return {\r\n        type: CREATE_NEW_GROUP,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const addNewGroupThunk = (group) => {\r\n    return (dispatch, getState) => {\r\n        axios.post('http://localhost:5000/api/groups', group).then(response => {\r\n            dispatch(addNewGroupAction(response.data))\r\n        }).catch(err => console.log(err))\r\n    }\r\n}\r\n\r\nexport function openAddUserModalAction(payload) {\r\n    return {\r\n        type: OPEN_ADD_GROUP_MODAL,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function deleteGroupSuccessAction(payload) {\r\n    return {\r\n        type: DELETE_GROUP_SUCCESS,\r\n        payload\r\n    }\r\n}\r\n\r\nexport function deleteGroupErrorAction(payload) {\r\n    return {\r\n        type: DELETE_GROUP_ERROR,\r\n        payload\r\n    }\r\n}\r\n\r\n\r\nfunction deleteGroupAction(payload) {\r\n    return {\r\n        type: DELETE_GROUP,\r\n        _id: payload\r\n    }\r\n}\r\n\r\nexport const deleteGroupThunk = (name, _id) => {\r\n    return (dispatch, getState) => {\r\n        axios.delete('http://localhost:5000/api/groups', {data: {name, _id}}).then(response => {\r\n            dispatch(deleteGroupAction(_id))\r\n            dispatch(deleteGroupSuccessAction(true))\r\n        }).catch(err => dispatch(deleteGroupErrorAction(true)))\r\n    }\r\n}\r\n\r\nfunction getAllGroupsAction(payload) {\r\n    return {\r\n        type: GET_GROUPS,\r\n        payload\r\n    }\r\n}\r\n\r\nexport const getAllGroupsThunk = () => {\r\n    return (dispatch, getState) => {\r\n        axios.get('http://localhost:5000/api/groups').then(response => {\r\n            dispatch(getAllGroupsAction(response.data))\r\n        }).catch(err => console.log(err))\r\n    }\r\n}\r\n\r\n\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport Button from \"@mui/material/Button\";\r\nimport AddCircleOutlineIcon from '@mui/icons-material/AddCircleOutline';\r\nimport {createUserThunk, isUserEditOpenAction, updateUserThunk} from \"../../../redux/actions/users-actions\";\r\n\r\n\r\n\r\nexport default function EditUserRoleSelect({name, id}) {\r\n\r\n    const groups = useSelector(state => state.groups.groups)\r\n    const isEdit = useSelector(state => state.users.isUserEditOpen)\r\n    const editedUserGroup = useSelector(state => state.users.editedUser.group)\r\n    const dispatch = useDispatch()\r\n    const [groupSelected, setGroupSelected] = React.useState(editedUserGroup)\r\n    const handleChange = (event) => {\r\n        setGroupSelected(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <Box sx={{minWidth: 120, mt: \"6px\"}}>\r\n            <FormControl fullWidth>\r\n                <InputLabel id=\"demo-simple-select-label\">Group</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={groupSelected}\r\n                    label=\"Group\"\r\n                    onChange={handleChange}\r\n                >\r\n                    {groups.map(el => <MenuItem key={el._id} value={el.name}>{el.name}</MenuItem>)}\r\n\r\n                </Select>\r\n            </FormControl>\r\n            <Box sx={{display: \"flex\", justifyContent: \"center\", paddingTop: \"22px\"}}>\r\n                <Button onClick={() => {\r\n\r\n                    if(name === '') {\r\n                        return\r\n                    }\r\n\r\n                    let user = {\r\n                        id,\r\n                        name,\r\n                        group: groupSelected\r\n                    }\r\n\r\n                    dispatch(updateUserThunk(user));\r\n                    dispatch(isUserEditOpenAction(false))\r\n\r\n                }} color=\"success\"\r\n                        variant=\"contained\"\r\n                        startIcon={<AddCircleOutlineIcon sx={{color: \"#fff\"}} fontSize=\"small\"/>}>\r\n                    save\r\n                </Button>\r\n\r\n            </Box>\r\n        </Box>\r\n    );\r\n}","import * as React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport {\r\n    isUserEditOpenAction,\r\n    openDialogAddUserAction,\r\n    setEditedUserAction,\r\n    setInputNameAction\r\n} from \"../../../redux/actions/users-actions\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport EditUserRoleSelect from \"./EditUserRoleSelect\";\r\n\r\n\r\n\r\n\r\nexport default function EditUser() {\r\n    const editedUser = useSelector(state => state.users.editedUser.name)\r\n    const editedUserID = useSelector(state => state.users.editedUser._id)\r\n    const isEdit = useSelector(state => state.users.isUserEditOpen)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n\r\n    const handleChange = (event) => {\r\n        dispatch(setInputNameAction(event.target.value))\r\n\r\n    };\r\n\r\n    return (\r\n\r\n        <Dialog open={isEdit} onClose={() => {\r\n            dispatch(isUserEditOpenAction(false));\r\n\r\n        }}>\r\n            <DialogTitle>Edit user</DialogTitle>\r\n            <DialogContent>\r\n                <TextField\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    id=\"name\"\r\n                    label=\"Name\"\r\n                    fullWidth\r\n                    onChange={(e)=> handleChange(e)}\r\n                    value={editedUser}\r\n                    autoComplete='off'\r\n                />\r\n                <EditUserRoleSelect name={editedUser}  id={editedUserID}/>\r\n            </DialogContent >\r\n        </Dialog>\r\n\r\n    );\r\n}","import React from 'react'\r\nimport Snackbar from \"@mui/material/Snackbar\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nexport const Notification = ({message, open, setOpen, severity}) => {\r\n\r\n    const dispatch = useDispatch()\r\n    const handleClose = (event, reason) => {\r\n        if (reason === 'clickaway') {\r\n            return;\r\n        }\r\n\r\n        dispatch(setOpen(false))\r\n    };\r\n    return(\r\n        <Snackbar anchorOrigin={{vertical: 'top', horizontal: 'right'}} open={open} autoHideDuration={4000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity={severity} sx={{ width: '100%' }}>\r\n                {message}\r\n            </Alert>\r\n        </Snackbar>\r\n    )\r\n}","import React, {useEffect} from \"react\";\r\n\r\nimport {SingleUser} from \"./SingleUser/SingleUser\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {\r\n    createUserErrorAction,\r\n    createUserSuccessAction,\r\n    deleteUserSuccessAction,\r\n    getAllUsersThunk,\r\n    isUserEditOpenAction,\r\n    openDialogAddUserAction, updateUserSuccessAction\r\n} from \"../../../redux/actions/users-actions\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport AddUser from \"../AddUser/AddUser\";\r\nimport {\r\n    deleteGroupErrorAction,\r\n    deleteGroupSuccessAction,\r\n    getAllGroupsThunk\r\n} from \"../../../redux/actions/groups-action\";\r\nimport EditUser from \"../EditUser/EditUser\";\r\nimport {Notification} from \"../../Notification/Notification\";\r\n\r\n\r\nexport const UsersContent = () => {\r\n\r\n    const isDeleteSuccess = useSelector(state => state.users.deleteUserSuccess)\r\n    const isCreateSuccess = useSelector(state => state.users.createUserSuccess)\r\n    const isCreateUserError = useSelector(state => state.users.createUserError)\r\n    const updateUserSucess = useSelector(state => state.users.updateUserSucess)\r\n    const users = useSelector(state => state.users.users)\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(getAllUsersThunk())\r\n        dispatch(getAllGroupsThunk())\r\n    }, [])\r\n    return (\r\n        <>\r\n            {users.map(el => <SingleUser key={el._id} name={el.name} created={el.created} group={el.group}\r\n                                         id={el._id}/>)}\r\n            <Box sx={{mt: \"16px\"}}>\r\n                <Grid container spacing={0}>\r\n                    <Grid item xs={9}></Grid>\r\n                    <Grid item xs={3}>\r\n\r\n                        <Button onClick={()=>{\r\n                            dispatch(openDialogAddUserAction(true));\r\n                            dispatch(isUserEditOpenAction(false));\r\n                        }} sx={{ml: \"3px\"}} variant=\"contained\" color=\"success\">\r\n                            add new user\r\n                        </Button>\r\n                        <AddUser/>\r\n                        <EditUser />\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n            <Notification message='You have successfully deleted a user' open={isDeleteSuccess}\r\n                          setOpen={deleteUserSuccessAction} severity='success'/>\r\n            <Notification message='You have successfully create a user' open={isCreateSuccess}\r\n                          setOpen={createUserSuccessAction} severity='success'/>\r\n            <Notification message='All fields must be filled' open={isCreateUserError}\r\n                          setOpen={createUserErrorAction} severity='error'/>\r\n            <Notification message='User updated!' open={updateUserSucess}\r\n                          setOpen={updateUserSuccessAction} severity='success'/>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport {UsersHeader} from \"./UsersHeader/UsersHeader\";\r\nimport {UsersContent} from \"./UsersContent/UsersContent\";\r\n\r\n\r\nexport const Users = () => {\r\n    return(\r\n        <>\r\n            <UsersHeader/>\r\n            <UsersContent/>\r\n        </>\r\n    )\r\n}","import React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\n\r\nexport const GroupsHeader = () => {\r\n    const tpStyle = {\r\n        margin: \"8px 4px\"\r\n\r\n    }\r\n    const gridStyle = {\r\n        borderLeft: \"2px solid #dcdcdc\",\r\n        paddingLeft: 0\r\n    }\r\n    return (\r\n        <Box sx={{boxShadow: \"0px 4px 8px 0px rgba(34, 60, 80, 0.2)\", mb: \"24px\", background: \"#caf0ff\"}}>\r\n            <Grid container spacing={0}>\r\n                <Grid item xs={3} sx={gridStyle}>\r\n                    <Typography variant=\"h6\"  sx={tpStyle}>\r\n                        ID\r\n                    </Typography>\r\n\r\n                </Grid>\r\n                <Grid item xs={3} sx={gridStyle}>\r\n                    <Typography variant=\"h6\" sx={tpStyle}>\r\n                        Name\r\n                    </Typography>\r\n\r\n                </Grid>\r\n                <Grid item xs={3} sx={gridStyle}>\r\n                    <Typography variant=\"h6\" sx={tpStyle}>\r\n                        Description\r\n                    </Typography>\r\n\r\n                </Grid>\r\n                <Grid item xs={3} sx={gridStyle} >\r\n                    <Typography variant=\"h6\" sx={tpStyle}>\r\n                        Actions\r\n                    </Typography>\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n\r\n    )\r\n}","import React from \"react\"\r\nimport Box from \"@mui/material/Box\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nimport {useDispatch} from \"react-redux\";\r\nimport {\r\n    deleteGroupThunk,\r\n    openEditModalAction,\r\n    setEditedGroupDatalAction\r\n} from \"../../../../redux/actions/groups-action\";\r\n\r\n\r\n\r\nexport const SingleGroup = ({name, description, id}) => {\r\n    const dispatch = useDispatch()\r\n    const tpStyle = {\r\n        margin: \"8px 4px\"\r\n\r\n    }\r\n    const gridStyle = {\r\n\r\n        paddingLeft: 0\r\n    }\r\n    return(\r\n        <Box sx={{border: \"2px solid #dcdcdc\", mb: \"4px\"}}>\r\n            <Grid container spacing={0}>\r\n                <Grid item xs={3} sx={gridStyle}>\r\n                    <Typography variant=\"subtitle1\"  sx={tpStyle}>\r\n                        {id}\r\n                    </Typography>\r\n\r\n                </Grid>\r\n                <Grid item xs={3} sx={gridStyle}>\r\n                    <Typography variant=\"subtitle1\" sx={tpStyle}>\r\n                        {name}\r\n                    </Typography>\r\n\r\n                </Grid>\r\n                <Grid item xs={3} sx={gridStyle}>\r\n                    <Typography variant=\"subtitle1\" sx={tpStyle}>\r\n                        {description}\r\n                    </Typography>\r\n\r\n                </Grid>\r\n                <Grid item xs={3} sx={gridStyle} >\r\n                    <Typography variant=\"subtitle1\" sx={tpStyle}>\r\n                        <Button onClick={()=>{\r\n\r\n                            dispatch(setEditedGroupDatalAction({name, description, _id: id}))\r\n                            dispatch(openEditModalAction(true));\r\n\r\n                        }} size=\"small\" variant=\"outlined\" sx={{mr: \"4px\"}}>edit group</Button>\r\n                        <Button onClick={()=>dispatch(deleteGroupThunk(name, id))} size=\"small\" variant=\"outlined\" color=\"error\">delete</Button>\r\n                    </Typography>\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n        </Box>\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport DialogActions from \"@mui/material/DialogActions\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\r\nimport Box from \"@mui/material/Box\";\r\nimport {\r\n    addGroupErrorAction,\r\n    addGroupSuccessAction,\r\n    addNewGroupThunk,\r\n    openAddUserModalAction\r\n} from \"../../../../redux/actions/groups-action\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nexport const AddGroup = () => {\r\n    const isAddGroupModalOpen = useSelector(state => state.groups.openAddGroupModal)\r\n    const dispatch = useDispatch()\r\n\r\n    const [nameInput, setNameInput] = useState('')\r\n    const [descriptionInput, setDescriptionInput] = useState('')\r\n\r\n    const handleClose = () => {\r\n        dispatch(openAddUserModalAction(false))\r\n        setNameInput('')\r\n        setDescriptionInput('')\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={isAddGroupModalOpen} onClose={handleClose}>\r\n                <DialogTitle>Fill in the fields to create a new group</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        value={nameInput}\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Name\"\r\n                        type=\"email\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        autoComplete='off'\r\n                        onChange={(e)=>setNameInput(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        value={descriptionInput}\r\n                        sx={{mt: '15px'}}\r\n                        id=\"outlined-multiline-static\"\r\n                        label=\"Description\"\r\n                        multiline\r\n                        rows={4}\r\n                        fullWidth\r\n                        onChange={(e)=> setDescriptionInput(e.target.value)}\r\n                    />\r\n                </DialogContent>\r\n                <Box sx={{display: \"flex\", justifyContent: \"center\", paddingTop: \"2px\", paddingBottom: \"22px\"}}>\r\n                    <Button onClick={() => {\r\n                        if(nameInput && descriptionInput){\r\n                            let newGroup = {\r\n                                name: nameInput,\r\n                                description: descriptionInput\r\n                            }\r\n                            dispatch(addNewGroupThunk(newGroup))\r\n                            dispatch(addGroupSuccessAction(true))\r\n                        }\r\n                        else{\r\n                            dispatch(addGroupErrorAction(true))\r\n                        }\r\n                        dispatch(openAddUserModalAction(false))\r\n                        setNameInput('')\r\n                        setDescriptionInput('')\r\n                    }} color=\"success\"\r\n                            variant=\"contained\"\r\n                            startIcon={<AddCircleOutlineIcon sx={{color: \"#fff\"}} fontSize=\"small\"/>}>\r\n                        save\r\n                    </Button>\r\n                </Box>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","import React, {useState} from 'react'\r\nimport Button from \"@mui/material/Button\";\r\nimport Dialog from \"@mui/material/Dialog\";\r\nimport DialogTitle from \"@mui/material/DialogTitle\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport DialogContent from \"@mui/material/DialogContent\";\r\nimport AddCircleOutlineIcon from \"@mui/icons-material/AddCircleOutline\";\r\nimport Box from \"@mui/material/Box\";\r\nimport {\r\n    addGroupErrorAction,\r\n    addGroupSuccessAction,\r\n    addNewGroupThunk,\r\n    openAddUserModalAction, openEditModalAction, setEditedGroupDatalAction, updateGroupThunk\r\n} from \"../../../../redux/actions/groups-action\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\n\r\nexport const EditGroup = () => {\r\n    const isEditGroupModalOpen = useSelector(state => state.groups.isEditGroupModalOpen)\r\n    const editedGroupData = useSelector(state => state.groups.editedGroup)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n\r\n    const handleClose = () => {\r\n        dispatch(openEditModalAction(false))\r\n\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Dialog open={isEditGroupModalOpen} onClose={handleClose}>\r\n                <DialogTitle>Edit group</DialogTitle>\r\n                <DialogContent>\r\n                    <TextField\r\n                        value={editedGroupData.name}\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Name\"\r\n                        type=\"email\"\r\n                        fullWidth\r\n                        variant=\"outlined\"\r\n                        autoComplete='off'\r\n                        onChange={(e)=>dispatch(setEditedGroupDatalAction({name:e.target.value, description: editedGroupData.description, _id: editedGroupData._id}))}\r\n                    />\r\n                    <TextField\r\n                        value={editedGroupData.description}\r\n                        sx={{mt: '15px'}}\r\n                        id=\"outlined-multiline-static\"\r\n                        label=\"Description\"\r\n                        multiline\r\n                        rows={4}\r\n                        fullWidth\r\n                        onChange={(e)=> dispatch(setEditedGroupDatalAction({...editedGroupData, description:e.target.value, _id: editedGroupData._id}))}\r\n                    />\r\n                </DialogContent>\r\n                <Box sx={{display: \"flex\", justifyContent: \"center\", paddingTop: \"2px\", paddingBottom: \"22px\"}}>\r\n                    <Button onClick={() => {\r\n                        if(editedGroupData.name && editedGroupData.description){\r\n                            let newGroup = {\r\n                                _id: editedGroupData._id,\r\n                                name: editedGroupData.name,\r\n                                description: editedGroupData.description\r\n                            }\r\n                            dispatch(updateGroupThunk(newGroup))\r\n                            dispatch(openEditModalAction(false))\r\n                        }\r\n                        else{\r\n                            dispatch(addGroupErrorAction(true))\r\n                        }\r\n                        dispatch(openAddUserModalAction(false))\r\n                        setEditedGroupDatalAction({name:'', description: ''})\r\n                    }} color=\"success\"\r\n                            variant=\"contained\"\r\n                            startIcon={<AddCircleOutlineIcon sx={{color: \"#fff\"}} fontSize=\"small\"/>}>\r\n                        save\r\n                    </Button>\r\n                </Box>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","import React, {useEffect} from \"react\";\r\n\r\n\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getAllUsersThunk, isUserEditOpenAction, openDialogAddUserAction} from \"../../../redux/actions/users-actions\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\n\r\nimport {\r\n    addGroupErrorAction,\r\n    addGroupSuccessAction,\r\n    deleteGroupErrorAction,\r\n    deleteGroupSuccessAction,\r\n    getAllGroupsThunk, openAddUserModalAction, updateGroupDataSuccessAction\r\n} from \"../../../redux/actions/groups-action\";\r\n\r\nimport {SingleGroup} from \"./SingleGroup/SingleGroup\";\r\nimport {Notification} from \"../../Notification/Notification\";\r\nimport {AddGroup} from \"./AddGroup/AddGroup\";\r\nimport EditUser from \"../../Users/EditUser/EditUser\";\r\nimport {EditGroup} from \"./EditGroup/EditGroup\";\r\n\r\n\r\nexport const GroupsContent = () => {\r\n\r\n    const isError = useSelector(state => state.groups.deleteGroupError)\r\n    const isSuccess = useSelector(state => state.groups.deleteGroupSuccess)\r\n    const isSuccessedCreate = useSelector(state => state.groups.addNewGroupSuccess)\r\n    const isErrorCreate = useSelector(state => state.groups.addNewGroupError)\r\n    const isupdateSuccess = useSelector(state => state.groups.updateGroupDataSuccess)\r\n\r\n\r\n    const groups = useSelector(state => state.groups.groups)\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        dispatch(getAllUsersThunk())\r\n        dispatch(getAllGroupsThunk())\r\n    }, [])\r\n    return (\r\n        <>\r\n            {groups.map(el => <SingleGroup key={el._id} name={el.name} description={el.description}\r\n                                           id={el._id}/>)}\r\n            <Box sx={{mt: \"16px\"}}>\r\n                <Grid container spacing={0}>\r\n                    <Grid item xs={9}></Grid>\r\n                    <Grid item xs={3}>\r\n\r\n                        <Button onClick={() => {\r\n                            dispatch(openAddUserModalAction(true))\r\n                        }} sx={{ml: \"3px\"}} variant=\"contained\" color=\"success\">\r\n                            add new group\r\n                        </Button>\r\n                        <AddGroup/>\r\n                        <EditGroup />\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n            <Notification message='You cannot delete the group the user belongs to!' open={isError}\r\n                          setOpen={deleteGroupErrorAction} severity='error'/>\r\n            <Notification message='You have successfully deleted the group' open={isSuccess}\r\n                          setOpen={deleteGroupSuccessAction} severity='success'/>\r\n            <Notification message='You have successfully created a group' open={isSuccessedCreate}\r\n                          setOpen={addGroupSuccessAction} severity='success'/>\r\n            <Notification message='Fill in the fields to create a new group' open={isErrorCreate}\r\n                          setOpen={addGroupErrorAction} severity='error'/>\r\n            <Notification message='Group updated!' open={isupdateSuccess}\r\n                          setOpen={updateGroupDataSuccessAction} severity='success'/>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport {GroupsHeader} from \"./GoupsHeader/GroupsHeader\";\r\nimport {GroupsContent} from \"./GroupsContent/GroupsContent\";\r\n\r\nexport const Groups = () => {\r\n\r\n    return(\r\n        <>\r\n            <GroupsHeader/>\r\n            <GroupsContent/>\r\n        </>\r\n    )\r\n}","import React from 'react'\nimport './App.css'\nimport Header from \"./components/Header/Header\"\nimport {Users} from \"./components/Users/Users\";\nimport { useSelector} from \"react-redux\";\nimport {Groups} from \"./components/Groups/Groups\";\n\n\n\nfunction App() {\n    const page = useSelector(state => state.page.activePage)\n    return (\n\n            <div className=\"App\">\n                <Header/>\n                {page === 'users' && <Users/>}\n                {page === 'groups' && <Groups/>}\n            </div>\n\n    );\n}\n\nexport default App;\n","import {\r\n    DELETE_USER,\r\n    GET_USERS,\r\n    CREATE_USER,\r\n    OPEN_DIALOG_FORM_ADD_USER,\r\n    IS_USER_EDIT_OPEN,\r\n    UPDATE_USER,\r\n    SET_EDITED_USER,\r\n    SET_INPUT_NAME,\r\n    DELETE_USER_SUCCESS,\r\n    CREATE_USER_SUCCESS,\r\n    CREATE_USER_ERROR,\r\n    UPDATE_USER_SUCCESS\r\n} from \"../actions/users-actions\";\r\n\r\nlet initialState = {\r\n    users: [],\r\n    editedUser: {\r\n        _id: '',\r\n        name: '',\r\n        group: ''\r\n    },\r\n    userEditDialogOpen: false,\r\n    isUserEditOpen: false,\r\n    deleteUserSuccess: false,\r\n    createUserSuccess: false,\r\n    createUserError: false,\r\n    updateUserSucess: false\r\n}\r\n\r\nexport const usersReducer = (state=initialState, action) => {\r\n    switch(action.type){\r\n        case UPDATE_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                updateUserSucess: action.payload\r\n            }\r\n        case CREATE_USER_ERROR:\r\n            return {\r\n                ...state,\r\n                createUserError: action.payload\r\n            }\r\n        case CREATE_USER_SUCCESS:\r\n            return{\r\n                ...state,\r\n                createUserSuccess: action.payload\r\n            }\r\n        case DELETE_USER_SUCCESS:\r\n            return{\r\n                ...state,\r\n                deleteUserSuccess: action.payload\r\n            }\r\n        case SET_INPUT_NAME:\r\n            return {\r\n                ...state, editedUser: {...state.editedUser, name: action.payload}\r\n            }\r\n        case SET_EDITED_USER:\r\n            return{\r\n                ...state, editedUser: action.payload\r\n            }\r\n        case IS_USER_EDIT_OPEN:\r\n            return{\r\n                ...state, isUserEditOpen: action.payload\r\n            }\r\n        case GET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.payload\r\n            }\r\n        case DELETE_USER:\r\n            return {\r\n                ...state,\r\n                users: state.users.filter(el => el._id !== action.payload)\r\n            }\r\n        case OPEN_DIALOG_FORM_ADD_USER:\r\n            return {\r\n                ...state,\r\n                userEditDialogOpen: action.payload\r\n            }\r\n        case CREATE_USER:\r\n            return {\r\n                ...state,\r\n                users: [...state.users, action.payload]\r\n            }\r\n        case UPDATE_USER:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(el => {\r\n                    if (el._id === action.user.id){\r\n                        let userToUpdate = el\r\n                        let userChanges = action.user\r\n                        delete userChanges.id\r\n                        let updatedUser = Object.assign(userToUpdate, userChanges)\r\n                        return updatedUser\r\n                    }\r\n                    return el\r\n                })\r\n            }\r\n        default: return state\r\n    }\r\n}","import {\r\n    GET_GROUPS,\r\n    DELETE_GROUP,\r\n    DELETE_GROUP_ERROR,\r\n    DELETE_GROUP_SUCCESS,\r\n    OPEN_ADD_GROUP_MODAL,\r\n    CREATE_NEW_GROUP,\r\n    ADD_GROUP_SUCCESS,\r\n    ADD_GROUP_ERROR,\r\n    OPEN_EDIT_MODAL_GROUP,\r\n    SET_EDITED_GROUP_DATA, UPDATE_GROUP_DATA, UPDATE_GROUP_DATA_SUCCESS\r\n} from \"../actions/groups-action\";\r\n\r\n\r\nlet initialState = {\r\n    groups: [],\r\n    editedGroup: {\r\n        _id: '',\r\n        name: '',\r\n        description: ''\r\n    },\r\n    deleteGroupError: false,\r\n    deleteGroupSuccess: false,\r\n    openAddGroupModal: false,\r\n    addNewGroupSuccess: false,\r\n    addNewGroupError: false,\r\n    isEditGroupModalOpen: false,\r\n    updateGroupDataSuccess: false\r\n}\r\n\r\nexport const groupsReducer = (state=initialState, action) => {\r\n    switch(action.type){\r\n        case OPEN_EDIT_MODAL_GROUP:\r\n            return{\r\n                ...state,\r\n                isEditGroupModalOpen: action.payload\r\n            }\r\n        case ADD_GROUP_ERROR:\r\n            return{\r\n                ...state,\r\n                addNewGroupError: action.payload\r\n            }\r\n        case ADD_GROUP_SUCCESS:\r\n            return{\r\n                ...state,\r\n                addNewGroupSuccess: action.payload\r\n            }\r\n        case CREATE_NEW_GROUP:\r\n            return{\r\n                ...state,\r\n                groups: [...state.groups, action.payload]\r\n            }\r\n        case OPEN_ADD_GROUP_MODAL:\r\n            return {\r\n                ...state,\r\n                openAddGroupModal: action.payload\r\n\r\n            }\r\n        case DELETE_GROUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                deleteGroupSuccess: action.payload\r\n            }\r\n        case DELETE_GROUP_ERROR:\r\n            return {\r\n                ...state,\r\n                deleteGroupError: action.payload\r\n            }\r\n        case GET_GROUPS:\r\n            return{\r\n                ...state,\r\n                groups: action.payload\r\n            }\r\n        case DELETE_GROUP:\r\n            return{\r\n                ...state,\r\n                groups: state.groups.filter(el => el._id !== action._id)\r\n            }\r\n        case SET_EDITED_GROUP_DATA:\r\n            return{\r\n                ...state,\r\n                editedGroup: action.payload\r\n            }\r\n        case UPDATE_GROUP_DATA_SUCCESS:\r\n            return{\r\n                ...state,\r\n                updateGroupDataSuccess: action.payload\r\n            }\r\n        case UPDATE_GROUP_DATA:\r\n            return{\r\n                ...state,\r\n                groups: state.groups.map(el=>{\r\n                    if(el._id === action.payload._id){\r\n                        return {\r\n                            _id: action.payload._id,\r\n                            name: action.payload.name,\r\n                            description: action.payload.description\r\n                        }\r\n                    }\r\n                    return el\r\n                })\r\n            }\r\n        default: return state\r\n    }\r\n}","import {CHANGE_PAGE} from \"../actions/page-actions\";\r\n\r\n\r\nlet initialState = {\r\n    activePage: 'users'\r\n}\r\n\r\nexport const pageReducer = (state=initialState, action) => {\r\n    switch(action.type){\r\n        case CHANGE_PAGE:\r\n            return {\r\n                ...state,\r\n                activePage: action.payload\r\n            }\r\n        default: return state\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport {usersReducer} from './users-reducer.js'\r\nimport {groupsReducer} from './group-reducer.js'\r\nimport {pageReducer} from './page--reducer.js'\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    users: usersReducer,\r\n    groups: groupsReducer,\r\n    page: pageReducer\r\n})","import {applyMiddleware, compose, createStore} from \"redux\";\r\nimport {rootReducer} from \"./reducers/root-reducer\"\r\nimport thunk from \"redux-thunk\";\r\n\r\n\r\nexport let store = createStore(rootReducer, compose(applyMiddleware(thunk), window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()))","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/store\";\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}><App /></Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n"],"sourceRoot":""}